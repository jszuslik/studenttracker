buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    group 'com.norulesweb.studenttracker.api'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:all"
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:2.0.1.RELEASE'
        }
    }
}

project(":student-api:core") {

    jar {
        baseName = 'student-api-core'
    }

    dependencies {
        compile("javax.validation:validation-api")
        compile("org.springframework:spring-web")
        compile("org.springframework.security:spring-security-web")
        compile("org.springframework.boot:spring-boot-starter-tomcat")
        compile("io.jsonwebtoken:jjwt")
        compile project(":student-core")

        testCompile group: 'junit', name: 'junit', version: '4.11'
    }
}

project(":student-api:service") {

    apply plugin: 'spring-boot'
    apply plugin: 'war'

    configurations {
        // For .war repackaging
        providedRuntime
    }


    war {
        baseName = 'student-api'
    }


    jar {
        baseName = 'student-api'
    }

    dependencies {
        compile("org.apache.commons:commons-lang3")
        compile("org.apache.cxf:cxf-rt-frontend-jaxws:3.1.5")
        compile("org.apache.cxf:cxf-rt-transports-http:3.1.5")
        compile("org.apache.cxf:cxf-rt-ws-security:3.1.5")
        compile("ch.qos.logback:logback-core")
        compile("org.springframework.boot:spring-boot-starter-web")
        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework:spring-web")
        // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
        compile group: 'org.springframework.security', name: 'spring-security-web', version: '4.1.3.RELEASE'

        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("org.springframework.boot:spring-boot-starter-security")
        compile("org.springframework.boot:spring-boot-starter-integration")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
        compile("io.jsonwebtoken:jjwt")

        compile("javax.mail:mail:1.4")                // Logback email notification support
        compile("javax.activation:activation:1.1.1")  // Logback email notification support

        compile project(":student-core")
        compile project(":student-api:core")

        testCompile group: 'junit', name: 'junit', version: '4.11'
    }

    // Explode the Spring Boot repackaged .war into the Tomcat directory
    task deployTomcat(type: Copy, dependsOn: bootRepackage) {
        fileTree(libsDir).matching { include "*.war" }.each {
            def filename = it.canonicalFile.name.replaceAll(~"(student-api)-${version}[.]war") { match, base -> return base }
            def outputDir = file(tomcatDeployDir() + "/" + filename)

            from zipTree(it)
            into outputDir
        }
    }
}
